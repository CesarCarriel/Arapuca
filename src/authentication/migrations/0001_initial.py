# Generated by Django 4.2.14 on 2024-07-18 14:07

import authentication.models.user
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('created_at', models.DateTimeField(auto_now_add=True, db_index=True, verbose_name='criado em')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='atualizado em')),
                ('name', models.CharField(max_length=60, null=True, verbose_name='nome')),
                ('email', models.EmailField(max_length=320, unique=True, verbose_name='e-mail')),
                ('phone', models.CharField(blank=True, max_length=20, null=True, unique=True, verbose_name='telefone')),
                ('is_staff', models.BooleanField(default=False, help_text='Indica que o usuário consegue acessar a área administrativa.', verbose_name='usuário interno')),
                ('is_active', models.BooleanField(default=True, verbose_name='é ativo')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'usuário',
            },
            managers=[
                ('objects', authentication.models.user.CustomUserManager()),
            ],
        ),
    ]
